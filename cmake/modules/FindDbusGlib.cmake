IF (DBUSGLIB_INCLUDE_DIR AND DBUSGLIB_LIBRARIES)
   # in cache already
   SET(DbusGlib_FIND_QUIETLY TRUE)
ELSE (DBUSGLIB_INCLUDE_DIR AND DBUSGLIB_LIBRARIES)
   SET(DbusGlib_FIND_QUIETLY FALSE)
ENDIF (DBUSGLIB_INCLUDE_DIR AND DBUSGLIB_LIBRARIES)

IF (NOT WIN32)
   # use pkg-config to get the directories and then use these values
   # in the FIND_PATH() and FIND_LIBRARY() calls
   FIND_PACKAGE(PkgConfig)
   PKG_CHECK_MODULES(PC_DBUSGLIB QUIET dbus-glib-1)
   SET(DBUSGLIB_DEFINITIONS ${PC_DBUSGLIB_CFLAGS_OTHER})
ENDIF (NOT WIN32)

FIND_PATH(DBUSGLIB_INCLUDE_DIR dbus/dbus-glib.h
   PATHS
   ${PC_DBUSGLIB_INCLUDEDIR}
   ${PC_DBUSGLIB_INCLUDE_DIRS}
   )

FIND_LIBRARY(DBUSGLIB_LIBRARIES dbus-glib-1
   PATHS
   ${PC_DBUSGLIB_LIBDIR}
   ${PC_DBUSGLIB_LIBRARY_DIRS}
   )

IF (NOT DBUSGLIB_INCLUDE_DIR)
   MESSAGE(STATUS "DbusGlib: WARNING: include dir not found")
ENDIF (NOT DBUSGLIB_INCLUDE_DIR)

IF (NOT DBUSGLIB_LIBRARIES)
   MESSAGE(STATUS "DbusGlib: WARNING: library not found")
ENDIF (NOT DBUSGLIB_LIBRARIES)

INCLUDE(FindPackageHandleStandardArgs)
FIND_PACKAGE_HANDLE_STANDARD_ARGS(DbusGlib  DEFAULT_MSG  DBUSGLIB_LIBRARIES DBUSGLIB_INCLUDE_DIR)

MARK_AS_ADVANCED(DBUSGLIB_INCLUDE_DIR DBUSGLIB_LIBRARIES)
